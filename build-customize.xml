<project name="Asap-ALL" default="build" basedir="."
        xmlns:ac="antlib:net.sf.antcontrib"	
	>   
	
   <property name="dist.dir"              value="dist"  />
    <property name="test.dir"               value="test"  />
    <property name="build.dir"               value="build"  />
  <property name="test.report.dir"        value="${test.dir}/report" />
	 <property name="build.test.results.dir" location="${build.dir}/test/results" />
 

  <!-- Settings for "javadoc" -->
   <property name="docs.dir"              value="docs"     />
   <property name="javadoc.dir"           location="${docs.dir}/Asap"/>
   <property name="javadoc.doctitle"      value="${module.name} API Documentation"/>
   <property name="javadoc.overview"      value="javadoc-overview.html"/>
   <property name="javadoc.noindex"       value="false"/>
   <property name="javadoc.nonavbar"      value="false"/>
   <property name="javadoc.notree"        value="false"/>
   <property name="javadoc.private"       value="false"/>
   <property name="javadoc.splitindex"    value="false"/>
   <property name="javadoc.use"           value="true"/>
   <property name="javadoc.author"        value="true"/>
   <property name="javadoc.version"       value="true"/>
   <property name="javadoc.windowtitle"   value="${module.name}"/>
   <property name="javadoc.link"          value="http://java.sun.com/javase/6/docs/api/"/>
   <property name="javadoc.linksource"    value="yes"/>
   <property name="javadoc.packages"      value="*"/>
  
 <fileset id="lib.fileset" dir=".">
      <include name="${lib.dir}/**/*.jar"   />
      <include name="${lib.local}/**/*.jar" />
   </fileset>
   <path id="javac-classpath">
       <pathelement location="${build.classes.dir}"/>
       <fileset refid="lib.fileset"/>
   </path>
 <filelist id="rebuildList" dir="${shared.project.root}" files="${rebuild.list}" />
   
   <target name="resolveAll">
    <delegate target="resolve" list="rebuildList" verbose="true"/>
   </target>
   
    <target name="ivyxmlreportAll">
    <delegate target="ivyxmlreport" list="rebuildList" verbose="true"/>
   </target>

   <target name="ivyreportAll">
    <delegate target="ivyreport" list="rebuildList" verbose="true"/>
   </target>
  
   <target name="nbuild" depends="nightlybuild" description="produce a nightly build of the Asap project"/>

   <target name="releaseAll"  description="produce a full minor release of the Asap project">
       <property name="release.target" value="-minorrelease"/>
      <antcall target="releaselist" />
   </target>
   
   <target name="-setupnightlybuildparams">
      <!-- first some checking for parameters. We require either a version or a build number -->
      <fail message="Asap nightlybuild: No release.list specified" unless="release.list" />
      <ac:if>
         <isset property="version"/> 
      <ac:then>
          <ac:if>
              <or>
                 <isset property="build"/>
                 <isset property="devnum"/>
              </or>   
          <ac:then>
              <fail message="Asap nightlybuild: When forcing a particular version, a devnum or build number cannot be used" />
          </ac:then>
          </ac:if>
      </ac:then>
      <ac:else>
          <ac:if>
             <not>
                <isset property="build"/>
             </not>
          <ac:then>
             <fail message="Asap nightlybuild: No build number specified"  />
          </ac:then>
          </ac:if>
      </ac:else> 
      </ac:if>
      <!-- after checking, we finally do the real work here: -->
      <property name="devnum" value="${build}"/>
      <property name="release.target" value="-devrelease"/>
   </target> 
   
   <target name="nightlylibbuild" depends="-setupnightlybuildparams">
      <antcall target="releaselist" >
         <param name="publish.resolver" value="asap.sftp.publish"/> <!-- overrides build.properties value -->      
      </antcall>
   </target> 
   
   <target name="nightlyresourcebuild" depends="-setupnightlybuildparams">
      <antcall target="releaseresourcelist">
         <param name="publish.resolver" value="asap.resource.sftp.publish"/> <!-- overrides build.properties value -->
      </antcall> 
   </target>
   
   <target name="nightlybuild" depends="nightlylibbuild, nightlyresourcebuild"/>
    
      
      
   

   <!-- targets: -->
   <target name="buildAll" depends="cleanAll, compileAll" description="cleanAll, compileAll"/>  
  
   <target name="compileAll"  description="compile HMI projects">     
    <delegate target="compile" list="rebuildList" verbose="true"/>
   </target>
   
   <target name="compilelistAll">
    <delegate target="compilelist" list="rebuildList" verbose="true"/>     
   </target> 
    
   <target name="cleanAll"  description="cleans HMI projects">     
        <delegate target="clean" list="rebuildList" verbose="true"/>
   </target>
 
   <target name="compile-testsAll"  description="Runs junit tests on all HMI projects">     
        <delegate target="compile-tests" list="rebuildList"/>
   </target>
    
   <target name="junitAll"  description="Runs junit tests on all HMI projects">     
        <delegate target="-junit" list="rebuildList"/>
   </target>
 
     <target name="junitreportAll"  depends="junitAll" description="Runs junit tests on all HMI projects and produces html report">     
      <delete dir="${test.report.dir}" failonerror="false"/>
      <mkdir dir="${test.report.dir}"/>
      <mkdir dir="${build.test.results.dir}"/>
      <echo message="${build.test.results.dir}/TEST"/>
      <junitreport todir="${build.test.results.dir}" >
         <fileset dir=".">
            <include name="**/build/test/results/TEST-*.xml"/>
         </fileset>
         <report format="frames" todir="${test.report.dir}"/>
      </junitreport>
   </target>
   
   <target name="findbugsAll"  description="Runs findbugs on all HMI projects">     
        <delegate target="findbugsxml" list="rebuildList"/>
   </target>

   <target name="cpdAll"  description="Runs the code duplication checker on all Asap projects">     
        <mkdir dir="build"/>
        <cpd minimumTokenCount="100" format="xml" encoding="UTF-8" outputFile="build/cpd.xml"
   	ignoreLiterals="true" ignoreIdentifiers="true">
        <fileset dir=".">
            <include name="**/src/**/*.java"/>
        </fileset>
        </cpd>
   </target>
   
    <target name="cpdreportAll" depends="cpdAll">
	  <xslt in="build/cpd.xml" style="${shared.ant.dir}/pmd/etc/xslt/cpdhtml.xslt" 	  
	  out="build/cpd.html" />
    </target>

   <target name="checkstyleAll"  description="Runs checkstyle on all HMI projects">     
        <delegate target="checkstylexml" list="rebuildList"/>
   </target>
   
   <target name="eclipseAll"  description="Create eclipse projects for all Asap projects">   
		<delegate target="eclipseproject" list="rebuildList"/>
	</target>
	<target name="eclipsesourceAll"  description="Create eclipse projects for all HMI projects">   
		<delegate target="eclipsesourceproject" list="rebuildList" verbose="true"/>
	</target>

   <target name="docall" description="Generate integrated Javadoc for all HMI/* projects">     
        <javadoc
            destdir="${javadoc.dir}"
            Overview="javadoc-overview.html" 
            doctitle="API Documentation for Asap packages, including the Asap Realizer"
            private="true" 
            use="true"
            author="true"
            link="http://java.sun.com/javase/6/docs/api/"
            breakiterator="yes"
        > 
            <classpath refid="javac-classpath"/>
                <group title="BMLRealizerBase" packages="asap.murml*,asap.bml*,asap.math*"/>
                <group title="AsapTesting" packages="asap.testutil*,asap.realizertestutil*,asap.realizertester*,asap.realizerintegrationtests*"/>
                <group title="AsapRealizer" packages="asap.realizer*"/>
                <group title="AsapEngineUtils" packages="asap.motionunit*,asap.binding*,asap.timemanipulator*"/>
                <group title="AsapEnvironment" packages="asap.environment*,asap.realizerembodiments*"/>
                <sourcepath>
                    <pathelement path="AsapMURML/src/"/>
                    <pathelement path="AsapBML/src/"/>
                    <pathelement path="AsapTestUtil/src/"/>
                    <pathelement path="AsapMath/src/"/>
                    <pathelement path="AsapRealizer/src/"/>
                    <pathelement path="AsapBinding/src/"/>
                    <pathelement path="AsapMotionUnit/src/"/>
                    <pathelement path="AsapRealizerEmbodiments/src/"/>
                    <pathelement path="AsapEnvironment/src/"/>
                    <pathelement path="AsapAnimationEngine/src/"/>
                    <pathelement path="AsapFaceEngine/src/"/>
                    <pathelement path="AsapAudioEngine/src/"/>
                    <pathelement path="AsapSpeechEngine/src/"/>
                    <pathelement path="AsapTextEngine/src/"/>
                    <pathelement path="AsapPictureEngine/src/"/>
                    <pathelement path="AsapEmitterEngine/src/"/>
                    <pathelement path="AsapLiveMocapEngine/src/"/>
                    <pathelement path="AsapJNaoQiEmbodiment/src/"/>
                    <pathelement path="AsapNaoEngine/src/"/>
                    <pathelement path="AsapRealizerIntegrationTests/src/"/>
                    <pathelement path="AsapRealizerTester/src/"/>
                    <pathelement path="AsapRealizerTestUtil/src/"/>
                </sourcepath>
        </javadoc>
        <mkdir dir="${dist.dir}"/>
	     <zip basedir="${javadoc.dir}" destfile="${dist.dir}/javadoc.zip" />
    </target>
    
    <target name="javancssAll" description="Generate a javancs report">
      <mkdir dir="${build.classes.dir}"/>
      <javancss srcdir="."
            generateReport="true"
            format="xml"
             outputfile="${build.classes.dir}/javancss_metrics.xml"
            abortOnFail="false"
            includes="**/*.java"
            />
    </target> 
</project>
